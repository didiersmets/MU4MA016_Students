#include <stdlib.h>
#include <stdio.h>

struct Vertex{
	union{
		struct{
			double x, y;
		};
		double coord[2];
	};
};

struct Triangle{
	union{
		struct{
			int v1, v2, v3;
		};
		int idx[3];
	};
};

struct Mesh2D{
	int nv; // number of vertices in the mesh
	struct Vertex* vert;/*array of vertices*/
	int nt; /*number of triangles*/
	struct Triangle* tri; /*array of triangles*/
};

int initialie_mesh2D(struct Mesh2D* m, int vtx_capacity, int tri_capacity)
{
	m->nv = vtx_capacity;
	m->vert = (struct Vertex*)malloc(vtx_capacity*sizeof(struct Vertex));
	m->nt = tri_capacity;
	m->tri = (struct Triangle*)malloc(tri_capacity*sizeof(struct Triangle));
	return 0;
}

void dispose_mesh2D(struct Mesh2D* m)
{
	free(m->vert);
	free(m->tri);
}

double area_mesh2D(struct Mesh2D* m)
{
	double res;
	for (int i = 0; i < m->nt){
		res += ((m->vert[m->tri[i]->v1]->x-m->vert[m->tri[i]->v2]->x)*
				(m->vert[m->tri[i]->v3]->y-m->vert[m->tri[i]->v2]->y)-
				(m->vert[m->tri[i]->v1]->y-m->vert[m->tri[i]->v2]->y)*
				(m->vert[m->tri[i]->v1]->x-m->vert[m->tri[i]->v2]->x)/2;
	}
	return res
}


